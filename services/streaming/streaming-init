#!/bin/bash

### BEGIN INIT INFO
# Provides:              streaming
# Required-Start:        memcached
# Required-Stop:         $all
# Default-Start:         2 3 4 5
# Default-Stop:          0 1 6
# Short-Description: starts the streaming server
# Description:           starts streaming using start_daemon
# chkconfig: - 65 35
### END INIT INFO

# Override in /etc/default/streaming
RUN_AS="spectrumbrowser"
RUN_AS_GROUP="spectrumbrowser"
PID_PATH=/tmp/streaming.pid
LOG_PATH=/var/log/streaming.log
PORT=9000

CFG=/etc/msod/MSODConfig.json
export PYTHON=/usr/local/bin/python2.7
PYTHONPATH=/usr/local/lib/python2.7/site-packages/:/usr/local/lib/python2.7/dist-packages

if [ ! -f "$CFG" ]; then
    exit -1
fi

SB_HOME=$(${PYTHON} -c 'import json; print json.load(open("'$CFG'"))["SPECTRUM_BROWSER_HOME"]')
export PYTHONPATH=$PYTHONPATH:${SB_HOME}/services/common:${SB_HOME}/services/streaming

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/streaming
NAME=streaming
DESC="data streaming"

test -x $DAEMON || exit 0

if [[ -f /etc/default/${NAME} ]]; then
    source /etc/default/${NAME}
fi

source /lib/lsb/init-functions


start() {
    if _is_running; then
        echo "${NAME} already running"
    else
        _check_superuser

        rm -f ${PID_PATH}

        echo -n "Starting ${NAME}: "
        if ! _memcached_running; then
            log_failure_msg "${NAME} requires memcached to be running"
            _print_usage_and_exit
        fi

        touch ${LOG_PATH}
        chown ${RUN_AS}:${RUN_AS_GROUP} ${LOG_PATH}
        chmod 660 ${LOG_PATH}

        start_daemon ${DAEMON} --pidfile ${PID_PATH} --logfile ${LOG_PATH} --username ${RUN_AS} --groupname ${RUN_AS_GROUP} --port ${PORT}

        if (( $? == 0 )) ; then
            log_success_msg
        else
            log_failure_msg
        fi
    fi
}

stop() {
    if _is_running; then
        _check_superuser
        echo -n "Stopping ${NAME}: "
        killproc -p ${PID_PATH} ${DAEMON} -SIGINT
        sleep 5
        killproc -p ${PID_PATH} ${DAEMON} -SIGTERM
        /sbin/fuser -k 9000/tcp
        /sbin/fuser -k 8004/tcp
        if _is_running; then
            log_failure_msg
        else
            log_success_msg
        fi
    else
        echo "${NAME} already stopped"
    fi
}

status() {
    if _is_running; then
        _exit_with_msg "${NAME} (pid $(cat ${PID_PATH})) is running" $?
    else
        _exit_with_msg "${NAME} is stopped" $?
    fi
}

_exit_with_msg() {
    echo $1 # msg
    exit $2 # exit code
}

_print_usage_and_exit() {
    echo "Usage: service ${NAME} {start|stop|restart|status}" >>/dev/stderr
    exit 1
}

_is_running() {
    pidofproc -p ${PID_PATH} ${DAEMON} >/dev/null
    return $?
}

_memcached_running() {
    service memcached status >/dev/null 2>&1
    return $?
}
_check_superuser() {
    if (( ${EUID} != 0 )); then
        echo "${NAME} must be run with root priveleges" >>/dev/stderr
        _print_usage_and_exit
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        sleep 1
        start
        ;;
    status)
        status
        ;;
    *)
        _print_usage_and_exit
        ;;
esac

exit 0
