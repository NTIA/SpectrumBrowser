Additional Boulder Setup for New System (steps 1-3 will be done only once):

1. Make sure mongodb is installed on Database VM:
# create a /etc/yum.repos.d/mongodb-org-2.6.repo file with:

[mongodb-org-2.6]
name=MongoDB 2.6 Repository
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
gpgcheck=0
enabled=1

# Run the following commands:
sudo yum install -y mongodb-org

sudo yum -y install policycoreutils-python
semanage port -a -t mongod_port_t -p tcp 27017
# this took awhile to run, but it worked.
sudo service mongod start

sudo iptables -I INPUT 1 -p tcp --dport 5901 -j ACCEPT
sudo /etc/init.d/iptables save

edit /etc/mongod.conf and added IP address of server to comment out following line:
#bind_ip=127.0.0.1

#Note: I left dbpath=/var/lib/mongo in /etc/mongod.conf.
sudo service mongod restart

2. Make sure ports are open on the database server so the web server (IP=132.163.64.237) can connect:

sudo iptables --flush
sudo iptables --list
sudo iptables -A INPUT -s 132.163.64.237 -p tcp --destination-port 27017 -m state --state NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -d 132.163.64.237 -p tcp --source-port 27017 -m state --state ESTABLISHED -j ACCEPT
iptables --list 

#flushing the iptables is only temporary, if do the following iptables will be restored:
sudo service iptables restart
iptables --list

3. Some software may need to be manually installed on web server (later could add to devel/install_stack.sh):
sudo yum install git

 ssh-keygen -t rsa -C "jkub@its.bldrdoc.gov"ssh-keygen -t rsa -C "jkub@its.bldrdoc.gov"ssh-keygen -t rsa -C "jkub@its.bldrdoc.gov"ssh-keygen -t rsa -C "jkub@its.bldrdoc.gov"
Added ssh key to my github.com account

git clone https://jkub01@github.com/usnistgov/SpectrumBrowser.git
-> this worked! Yeah. Then I needed to enter my password.

To pull into /opt, I needed to do the following:
cd /opt
sudo chmod 777 -R SpectrumBrowser/
cd SpectrumBrowser/.git
sudo vi config
make sure that I have the following:
url = https://jkub01@github.com/usnistgov/SpectrumBrowser.git

sudo yum update
yum groupinstall "Development tools"
sudo yum install -y zlib-devel bzip2-devel openssl-devel xz-libs wget

wget http://www.python.org/ftp/python/2.7.8/Python-2.7.8.tar.xz
xz -d Python-2.7.8.tar.xz
cd Python-2.7.8
sudo mv Python-2.7.8 /opt


cd /opt/Python-2.7.8
./configure --prefix=/usr/local
make && make altinstall
ln -s /usr/local/bin/python2.7 /usr/local/bin/python
exit shell script & come back in

sudo yum install python-devel.x86_64

cd /tmp
sudo wget http://pypi.python.org/packages/source/d/distribute/distribute-0.6.35.tar.gzdu
sudo tar zxvf distribute-0.6.35.tar.gz
cd distribute-0.6.35
sudo /usr/local/bin/python2.7 setup.py install

# you have to install pip for python 2.7 by doing the following steps
sudo wget --no-check-certificate https://pypi.python.org/packages/source/s/setuptools/setuptools-1.4.2.tar.gz
sudo tar -xvf setuptools-1.4.2.tar.gz
sudo python setup.py install
sudo curl https://raw.githubusercontent.com/pypa/pip/master/contrib/get-pip.py | python2.7 -

create file /etc/yum.repos.d/rpmforge.repo 
put following in above file:
#Name: RPMforge RPM Repository for Red Hat Enterprise 5 - dag
#URL: http://rpmforge.net/
[rpmforge]
name = Red Hat Enterprise $releasever - RPMforge.net - dag
#baseurl = http://apt.sw.be/redhat/el5/en/$basearch/dag
mirrorlist = http://apt.sw.be/redhat/el5/en/mirrors-rpmforge
#mirrorlist = file:///etc/yum.repos.d/mirrors-rpmforge
enabled = 1
protect = 0
gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rpmforge-dag
gpgcheck = 1

sudo -E ./SpectrumBrowser/devel/install_stack.sh
sudo rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
sudo yum install libffi-devel

sudo easy_install -U distribute
sudo pip uninstall numpy
sudo pip install numpy

-> no package libpbg, libevent-devel, agg available

sudo yum remove java-1.6.0-openjdk
sudo yum install java-1.7.0-openjdk
sudo yum install java-1.7.0-openjdk-devel


sudo rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
sudo yum install nginx16

sudo iptables -I INPUT 1 -p tcp -m tcp --sport 8443 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp -m tcp --sport 8443 -j ACCEPT 
sudo /etc/init.d/iptables save

service iptables status
echo $?
-> should be 0, if not then:
sudo service iptables restart

4. Change the git config to your user name:
sudo vi /opt/SpectrumBrowser/git/config
# change the following line to your git user name instead of jkub01
url = https://jkub01@github.com/usnistgov/SpectrumBrowser.git

5. Follow instructions in devel/README.md
#Note: on ITS systems you will need to change the MSODConfig.json:
sudo vi /etc/msod/MSODConfig.json
# change the following:
"DB_PORT_27017_TCP_ADDR": "localhost" 
# to the mongo server IP =  132.163.64.236
"DB_PORT_27017_TCP_ADDR": "132.163.64.236"

6. If you do not have the sensor data on the Linux server VM (132.163.64.237), 
you can do the following to copy from Windows machine:
# on windows machine go to the following web address & install cygwin
https://cygwin.com/install.html
-> after installing once, install again and search for openssh
-> select openssh and install again
run cygwin64
ssh jkub@132.163.64.237
-> say yes and enter password
cd c:
cd Documents/SpectrumMonitoring/MSOD_test_data
scp file.txt jkub@132.163.64.237:/home/jkub

7. If you need to clean out the databases and reload them, do the following:
# Note: make sure to go to the Database VM and in /var/lib/mongo enter:
sudo rm admindb.*
sudo rm sysconfig.*
sudo rm spectrumdb.*

8. To load the user accounts do the following on the dev server:
cd /opt/SpectrumBrowser/flask
sudo python AccountsManagement.py -f ../unit-tests/Accounts.bldr.txt init
# you should see Looking for local and looking for global Config file, these messages are just for status info.
cp /opt/SpectrumBrowser/unit-tests/Config_bldr_unittest.txt /opt/SpectrumBrowser/unit-tests/Config.unittest.txt 

# I hand-edited /opt/SpectrumBrowser/unit-tests/setup-test-sensors.py 
# to hard-code the following lines since my data path and spectrum browser path did not work
# testDataLocation = "/opt/DataSpectrumBrowser"
# sys.path.append("/opt/SpectrumBrowser" + "/flask")
cd /opt/SpectrumBrowser/flask
sudo python ../unit-tests/setup-test-sensors.py




